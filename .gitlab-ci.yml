stages:
  - build
  - pretest
  - deploy
  - test
  - performance
  - dast
  
variables:
  DOCKER_IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

test:
  stage: pretest
  image: node:10
  services:
    - name: postgres:10
      alias: db
  variables:
    POSTGRES_DB: todo
    POSTGRES_USER: "${DBUSER}"
    POSTGRES_PASS: "${DBPASS}"
    DATABASE_URL: "postgres://${DBUSER}:${DBPASS}@db/todo"
  script:
    - chmod +x ./ci-test.sh
    - ./ci-test.sh

smoketest:
  stage: test
  script:
    - wget --spider app.cloudlinuxacademy.com

build:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker info
  script:
    - docker build -t $DOCKER_IMAGE_TAG .
    - docker push $DOCKER_IMAGE_TAG

deploy:
  stage: deploy
  variables:
    APP_NAME: production-todo
    APP_LABEL: production
    DEPLOY_HOST: app.cloudlinuxacademy.com
  environment:
    name: production
    url: http://app.cloudlinuxacademy.com:32445/
  image: roffe/kubectl:v1.13.0
  script:
    - kubectl delete --ignore-not-found=true secret gitlab-auth
    - kubectl create secret docker-registry gitlab-auth --docker-server=$CI_REGISTRY --docker-username=$KUBE_PULL_USER --docker-password=$KUBE_PULL_PASS
    - cat k8s.yaml | envsubst | kubectl apply -f -
  only:
    - master
    
include:
  template: Verify/Browser-Performance.gitlab-ci.yml

performance:
  variables:
    URL: http://app.cloudlinuxacademy.com

dast:
  stage: dast
  image: registry.gitlab.com/gitlab-org/security-products/zaproxy
  variables:
    website: "http://app.cloudlinuxacademy.com/"
  allow_failure: true
  script:
    - mkdir /zap/wrk/
    - /zap/zap-baseline.py -r gl-dast-report.html -t $website || true
    - cp /zap/wrk/gl-dast-report.html .
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - gl-dast-report.html